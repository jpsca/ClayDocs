.prose {
  --tw-prose-body: #3f3f46;
  --tw-prose-headings: #18181b;
  --tw-prose-lead: #52525b;
  --tw-prose-links: #18181b;
  --tw-prose-bold: #18181b;
  --tw-prose-counters: #71717a;
  --tw-prose-bullets: #d4d4d8;
  --tw-prose-hr: #e4e4e7;
  --tw-prose-quotes: #18181b;
  --tw-prose-quote-borders: #e4e4e7;
  --tw-prose-captions: #71717a;
  --tw-prose-code: #18181b;
  --tw-prose-pre-code: rgb(238 238 238);
  --tw-prose-pre-border: rgb(51, 51, 51);
  --tw-prose-pre-bg: rgb(24 24 24);
  --tw-prose-th-borders: #d4d4d8;
  --tw-prose-td-borders: #e4e4e7;

  --tw-prose-invert-body: #d4d4d8;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #a1a1aa;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #a1a1aa;
  --tw-prose-invert-bullets: #52525b;
  --tw-prose-invert-hr: #3f3f46;
  --tw-prose-invert-quotes: #f4f4f5;
  --tw-prose-invert-quote-borders: #3f3f46;
  --tw-prose-invert-captions: #a1a1aa;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: rgb(238 238 238);
  --tw-prose-invert-pre-border: rgb(51, 51, 51);
  --tw-prose-invert-pre-bg: rgb(24 24 24);
  --tw-prose-invert-th-borders: #52525b;
  --tw-prose-invert-td-borders: #3f3f46;
}

.dark .prose {
  --tw-prose-body: var(--tw-prose-invert-body);
  --tw-prose-headings: var(--tw-prose-invert-headings);
  --tw-prose-lead: var(--tw-prose-invert-lead);
  --tw-prose-links: var(--tw-prose-invert-links);
  --tw-prose-bold: var(--tw-prose-invert-bold);
  --tw-prose-counters: var(--tw-prose-invert-counters);
  --tw-prose-bullets: var(--tw-prose-invert-bullets);
  --tw-prose-hr: var(--tw-prose-invert-hr);
  --tw-prose-quotes: var(--tw-prose-invert-quotes);
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
  --tw-prose-captions: var(--tw-prose-invert-captions);
  --tw-prose-code: var(--tw-prose-invert-code);
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
  --tw-prose-pre-border: var(--tw-prose-invert-pre-border);
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}

.prose {
  font-size: 1rem;
  line-height: 1.75;
  color: var(--tw-prose-body);
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

a.headerlink {
  margin-left: .25rem;
  display: inline-block;
  text-decoration-line: none;
  opacity: 0;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  transition-duration: .15s;
}

h2:hover a.headerlink,
h3:hover a.headerlink,
h4:hover a.headerlink,
h5:hover a.headerlink,
h6:hover a.headerlink {
  opacity: 0.5;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.98em;
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  border: 1px solid rgb(var(--tw-prose-pre-border));
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.98em;
  font-feature-settings: "kern";
  line-height: 1.7142857;
  margin-left: 0;
  margin-right: 0;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
  white-space: pre;
}

@media (max-width: 640px) {
  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    margin-left: -1rem;
    margin-right: -1rem;
    border-left: none;
    border-right: none;
    border-radius: 0;
  }
}

.prose :where(pre .filename):not(:where([class~="not-prose"] *)) {
  display: block;
  padding: 0.4em 1em;
  font-weight: 500;
  font-size: 0.9rem;
  border-bottom: 1px solid rgb(var(--border-color));
}

.prose :where(pre a):not(:where([class~="not-prose"] *)) {
  text-decoration: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  overflow: auto;
  overscroll-behavior: contain;
  scrollbar-width: thin;
}
.prose :where(pre code::-webkit-scrollbar) {
  width: 2px;
  background-color: ButtonFace;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}



.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose :where(.task-list .task-list):not(:where([class~="not-prose"] *)) {
  padding-left: 1em;
}

.prose :where(dl):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dt):not(:where([class~="not-prose"] *)) {
  font-weight: bold;
}

.prose :where(dd):not(:where([class~="not-prose"] *)) {
  padding-left: 1em;
}

pre code [data-linenos] {
  display: inline-block;
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  white-space: nowrap;
  color: rgb(82 82 91);
  font-size: 0.75rem;
}
pre code [data-linenos]:before {
  content: attr(data-linenos);
}

pre code .hll { background-color: #49483e }
pre code .c { color: #75715e } /* Comment */
pre code .err { color: #960050; background-color: #1e0010 } /* Error */
pre code .k { color: #66d9ef } /* Keyword */
pre code .l { color: #ae81ff } /* Literal */
pre code .n { color: #f8f8f2 } /* Name */
pre code .o { color: #f92672 } /* Operator */
pre code .p { color: #f8f8f2 } /* Punctuation */
pre code .ch { color: #75715e } /* Comment.Hashbang */
pre code .cm { color: #75715e } /* Comment.Multiline */
pre code .cp { color: #75715e } /* Comment.Preproc */
pre code .cpf { color: #75715e } /* Comment.PreprocFile */
pre code .c1 { color: #75715e } /* Comment.Single */
pre code .cs { color: #75715e } /* Comment.Special */
pre code .gd { color: #f92672 } /* Generic.Deleted */
pre code .ge { font-style: italic } /* Generic.Emph */
pre code .gi { color: #a6e22e } /* Generic.Inserted */
pre code .gs { font-weight: bold } /* Generic.Strong */
pre code .gu { color: #75715e } /* Generic.Subheading */
pre code .kc { color: #66d9ef } /* Keyword.Constant */
pre code .kd { color: #66d9ef } /* Keyword.Declaration */
pre code .kn { color: #f92672 } /* Keyword.Namespace */
pre code .kp { color: #66d9ef } /* Keyword.Pseudo */
pre code .kr { color: #66d9ef } /* Keyword.Reserved */
pre code .kt { color: #66d9ef } /* Keyword.Type */
pre code .ld { color: #e6db74 } /* Literal.Date */
pre code .m { color: #ae81ff } /* Literal.Number */
pre code .s { color: #e6db74 } /* Literal.String */
pre code .na { color: #a6e22e } /* Name.Attribute */
pre code .nb { color: #f8f8f2 } /* Name.Builtin */
pre code .nc { color: #a6e22e } /* Name.Class */
pre code .no { color: #66d9ef } /* Name.Constant */
pre code .nd { color: #a6e22e } /* Name.Decorator */
pre code .ni { color: #f8f8f2 } /* Name.Entity */
pre code .ne { color: #a6e22e } /* Name.Exception */
pre code .nf { color: #a6e22e } /* Name.Function */
pre code .nl { color: #f8f8f2 } /* Name.Label */
pre code .nn { color: #f8f8f2 } /* Name.Namespace */
pre code .nx { color: #a6e22e } /* Name.Other */
pre code .py { color: #f8f8f2 } /* Name.Property */
pre code .nt { color: #f92672 } /* Name.Tag */
pre code .nv { color: #f8f8f2 } /* Name.Variable */
pre code .ow { color: #f92672 } /* Operator.Word */
pre code .w { color: #f8f8f2 } /* Text.Whitespace */
pre code .mb { color: #ae81ff } /* Literal.Number.Bin */
pre code .mf { color: #ae81ff } /* Literal.Number.Float */
pre code .mh { color: #ae81ff } /* Literal.Number.Hex */
pre code .mi { color: #ae81ff } /* Literal.Number.Integer */
pre code .mo { color: #ae81ff } /* Literal.Number.Oct */
pre code .sa { color: #e6db74 } /* Literal.String.Affix */
pre code .sb { color: #e6db74 } /* Literal.String.Backtick */
pre code .sc { color: #e6db74 } /* Literal.String.Char */
pre code .dl { color: #e6db74 } /* Literal.String.Delimiter */
pre code .sd { color: #e6db74 } /* Literal.String.Doc */
pre code .s2 { color: #e6db74 } /* Literal.String.Double */
pre code .se { color: #ae81ff } /* Literal.String.Escape */
pre code .sh { color: #e6db74 } /* Literal.String.Heredoc */
pre code .si { color: #e6db74 } /* Literal.String.Interpol */
pre code .sx { color: #e6db74 } /* Literal.String.Other */
pre code .sr { color: #e6db74 } /* Literal.String.Regex */
pre code .s1 { color: #e6db74 } /* Literal.String.Single */
pre code .ss { color: #e6db74 } /* Literal.String.Symbol */
pre code .bp { color: #f8f8f2 } /* Name.Builtin.Pseudo */
pre code .fm { color: #a6e22e } /* Name.Function.Magic */
pre code .vc { color: #f8f8f2 } /* Name.Variable.Class */
pre code .vg { color: #f8f8f2 } /* Name.Variable.Global */
pre code .vi { color: #f8f8f2 } /* Name.Variable.Instance */
pre code .vm { color: #f8f8f2 } /* Name.Variable.Magic */
pre code .il { color: #ae81ff } /* Literal.Number.Integer.Long */
